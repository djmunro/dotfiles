syntax on
set bs=2
set ai
set nocompatible
set backspace=indent,eol,start
set showcmd
set showmatch
set ruler
set wildmode=longest:full
set wildmenu
set hidden
set visualbell t_vb=
set t_vb=
set pastetoggle=<F11>
set timeout timeoutlen=3000 ttimeoutlen=100
set history=200
set number
set notitle
set foldlevel=999
set novb
set mouse=a

" Makefile sanity
autocmd BufEnter ?akefile* set noet ts=8 sw=8
autocmd BufEnter */debian/rules set noet ts=8 sw=8

set wildignore+=*.o,*.obj,.git,*.min.js,*.png,*.class,*.jpg,*.jar,*.pack,*.idx,*.gif,*.apk,*.dmg,*.exe,*.dll,*.bak,*.orig,*.swp,*.swo,*.gif,*.pyc,*.swf,*.pdf,*.psd,*.zip,*.flv,*.ttf,*.gz,*.gpg,*.fla,node_modules,*.a,*.so

" Set title
set title titlestring=%t%(\ %M%)%(\ (%{expand(\"%:p:h\")})%)%(\ %a%)\ -\ %{v:servername}

" Remember where the file was last left off
if has("autocmd")
  " When editing a file, always jump to the last cursor position
  autocmd BufReadPost *
  \ if line("'\"") > 0 && line ("'\"") <= line("$") |
  \   exe "normal g'\"" |
  \ endif
endif

" Switch to Ibeam in insert mode
if has("autocmd")
  "au InsertEnter * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape ibeam"
  "au InsertLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"
  "au VimEnter * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"
  "au VimLeave * silent execute "!gconftool-2 --type string --set /apps/gnome-terminal/profiles/Default/cursor_shape block"
endif

" Not sure what this does
filetype plugin on

" Tabbing
set tabstop=4
set shiftwidth=4
set softtabstop=4
set smarttab
set expandtab
set cc=81

set shiftround
set autoindent

set incsearch
set ignorecase

set dir=$HOME/.vim/tmp

" Let upper case write/quit commands work
com! Q q
com! W w
com! Wq wq
com! WQ wq
com! Bd bd
com! BD bd

" Jump to after end of line of next ending brace
nnoremap <C-e> :/}<CR>A
inoremap <C-e> <ESC>:/}<CR>A

" Copy
nnoremap <C-c> "+y
vnoremap <C-c> "+y
" inoremap <C-c> <ESC>V<CR>"+y<ESC>i

" Paste
nnoremap <C-x> "+p
vnoremap <C-x> "+p
inoremap <C-x> <ESC>"+pi

" Maps
"nnoremap ` :NERDTreeToggle<CR>
nnoremap <F1> :CommandT<CR>
nnoremap <F2> :CommandTBuffer<CR>
nnoremap <F4> :set nonumber!<CR>
nnoremap <gt> :tabprevious<CR>
nnoremap <gT> :tabNext<CR>
nnoremap <TAB> :tabnext<CR>
nnoremap <S-TAB> :tabprevious<CR>

" gvim
set guifont=Ubuntu\ Mono\ 11
set guioptions-=T
set guioptions-=m
set guioptions-=l
set guioptions-=r
set guioptions-=b
set guioptions-=L

" colors
set t_Co=256
colorscheme candycode2
"colorscheme ohess
"hi LineNr ctermfg=darkcyan ctermbg=black


"autocmd FileType actionscript set omnifunc=actionscriptcomplete#CompleteAS
"autocmd FileType python set omnifunc=pythoncomplete#Complete
"autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
"autocmd FileType html set omnifunc=htmlcomplete#CompleteTags
"autocmd FileType css set omnifunc=csscomplete#CompleteCSS
"autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
"autocmd FileType php set omnifunc=phpcomplete#CompletePHP
"autocmd FileType c set omnifunc=ccomplete#Complete

set rtp+=~/.vim/vundle/ 
call vundle#rc()

" My bundles
"Bundle "taglist.vim"
"Bundle "https://github.com/scrooloose/nerdtree.git"
"Bundle "minibufexpl.vim"
"Bundle "ctags.vim"
"Bundle "Conque-Shell"
"Bundle "vimwiki"
"Bundle "remote-PHP-debugger"
"Bundle "actionscript.vim--Leider"
Bundle 'snipMate'
Bundle "Command-T"
Bundle 'fugitive.vim'
Bundle 'reload.vim'
"Bundle 'Markdown'
"Bundle 'Markdown-syntax'
"Bundle 'Syntastic'
"Bundle 'Lokaltog/vim-superstatus'

" Snipmate
let g:snips_author = 'Ryan Munro'

" Syntax detection
au BufRead,BufNewFile *.cpp set syntax=cpp11
au BufRead,BufNewFile *.h set syntax=cpp11
au BufRead,BufNewFile *.mxml set filetype=mxml
au Bufread,BufNewFile *.as set filetype=actionscript
au Bufread,BufNewFile *.co set filetype=coffee
au Bufread,BufNewFile *.cs set filetype=coffee
au Bufread,BufNewFile *.go set filetype=go
au Bufread,BufNewFile *.less set filetype=less
au Bufread,BufNewFile *.php.tpl set filetype=php
au Bufread,BufNewFile *.lang set filetype=lang
au Bufread,BufNewFile *.m set filetype=objc
syntax on


" remember session
"set viminfo='10,\"100,:20,%,n~/.viminfo
"function! ResCur()
"    if line("'\"") <= line("$")
"        normal! g`"
"        return 1
"    endif
"endfunction

"augroup resCur
"    autocmd!
"    autocmd BufWinEnter * call ResCur()
"augroup END
"autocmd BufReadPost *
"  \ if ! exists("g:leave_my_cursor_position_alone") |
"  \     if line("'\"") > 0 && line ("'\"") <= line("$") |
"  \         exe "normal g'\"" |
"  \     endif |
"  \ endif

